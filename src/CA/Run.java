package CA;


public class Run {



	public static void main(String[] args) {
		/*
		 * glidergun in a size 41 square CA
		 */
		final int[][]gliderGun = new int[][]{
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0},
				{0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0},
				{0,1,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
				{0,1,1,0,0,0,0,0,0,0,0,1,0,0,0,1,0,1,1,0,0,0,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
				{0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
				{0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},


		};


		final int[][] marioMin = new int[][]{
				{0,0,0,2,2,2,2,2,0,0,0,0},
				{0,0,2,2,2,2,2,2,2,2,2,0},
				{0,0,1,1,1,3,3,1,3,0,0,0},
				{0,1,3,1,3,3,3,1,3,3,3,0},
				{0,1,3,1,1,3,3,3,1,3,3,3},
				{0,1,1,3,3,3,3,1,1,1,1,0},
				{0,0,0,3,3,3,3,3,3,3,0,0},
				{0,0,1,1,2,1,1,1,0,0,0,0},
				{0,1,1,1,2,1,1,2,1,1,1,0},
				{1,1,1,1,2,2,2,2,1,1,1,1},
				{3,3,1,2,3,2,2,3,2,1,3,3},
				{3,3,3,2,2,2,2,2,2,3,3,3},
				{3,3,2,2,2,2,2,2,2,2,3,3},
				{0,0,2,2,2,0,0,2,2,2,0,0},
				{0,1,1,1,0,0,0,0,1,1,1,0},
				{1,1,1,1,0,0,0,0,1,1,1,1}
		};
		final int[][] mario = new int[][]{
				{0,0,0,0,0,2,2,2,2,2,0,0,0,0,0,0},
				{0,0,0,0,2,2,2,2,2,2,2,2,2,0,0,0},
				{0,0,0,0,1,1,1,3,3,1,3,0,0,0,0,0},
				{0,0,0,1,3,1,3,3,3,1,3,3,3,0,0,0},
				{0,0,0,1,3,1,1,3,3,3,1,3,3,3,0,0},
				{0,0,0,1,1,3,3,3,3,1,1,1,1,0,0,0},
				{0,0,0,0,0,3,3,3,3,3,3,3,0,0,0,0},
				{0,0,0,0,1,1,2,1,1,1,0,0,0,0,0,0},
				{0,0,0,1,1,1,2,1,1,2,1,1,1,0,0,0},
				{0,0,1,1,1,1,2,2,2,2,1,1,1,1,0,0},
				{0,0,3,3,1,2,3,2,2,3,2,1,3,3,0,0},
				{0,0,3,3,3,2,2,2,2,2,2,3,3,3,0,0},
				{0,0,3,3,2,2,2,2,2,2,2,2,3,3,0,0},
				{0,0,0,0,2,2,2,0,0,2,2,2,0,0,0,0},
				{0,0,0,1,1,1,0,0,0,0,1,1,1,0,0,0},
				{0,0,1,1,1,1,0,0,0,0,1,1,1,1,0,0}
		};

		final int[][] creeper = new int[][]{
				{2,2,2,2,2,2,2,2,2,2},
				{2,2,2,2,2,2,2,2,2,2},
				{2,2,1,1,2,2,1,1,2,2},
				{2,2,1,1,2,2,1,1,2,2},
				{2,2,2,2,1,1,2,2,2,2},
				{2,2,2,1,1,1,1,2,2,2},
				{2,2,2,1,1,1,1,2,2,2},
				{2,2,2,1,2,2,1,2,2,2},
				{2,2,2,2,2,2,2,2,2,2},
				{2,2,2,2,2,2,2,2,2,2},
		};

		final int[][] creeperEasy = new int[][]{
				{1,1,0,0,1,1},
				{1,1,0,0,1,1},
				{0,0,1,1,0,0},
				{0,1,1,1,1,0},
				{0,1,1,1,1,0},
				{0,1,0,0,1,0},

		};
		final int[][] mushroom = new int[][]{
				{0,0,0,0,0,1,1,1,1,1,1,0,0,0,0,0},
				{0,0,0,1,1,2,2,2,2,0,0,1,1,0,0,0},
				{0,0,1,0,0,2,2,2,2,0,0,0,0,1,0,0},
				{0,1,0,0,2,2,2,2,2,2,0,0,0,0,1,0},
				{0,1,0,2,2,0,0,0,0,2,2,0,0,0,1,0},
				{1,2,2,2,0,0,0,0,0,0,2,2,2,2,2,1},
				{1,2,2,2,0,0,0,0,0,0,2,2,0,0,2,1},
				{1,0,2,2,0,0,0,0,0,0,2,0,0,0,0,1},
				{1,0,0,2,2,0,0,0,0,2,2,0,0,0,0,1},
				{1,0,0,2,2,2,2,2,2,2,2,2,0,0,2,1},
				{1,0,2,2,1,1,1,1,1,1,1,1,2,2,2,1},
				{0,1,1,1,0,0,1,0,0,1,0,0,1,1,1,0},
				{0,0,1,0,0,0,1,0,0,1,0,0,0,1,0,0},
				{0,0,1,0,0,0,0,0,0,0,0,0,0,1,0,0},
				{0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0},
				{0,0,0,0,1,1,1,1,1,1,1,1,0,0,0,0}
		};




		/*  Initialize variables */ 
		int dimentions = 2; 
		int boardSize = 6;
		int numOfStates = 2;
		int numberOfRuns = 40;
		boolean randomStart = false;
		boolean vonNeumannNeighbourhood = true;

		CA ca = new CA(dimentions, boardSize, numOfStates, randomStart, vonNeumannNeighbourhood);
		ca.useWriter();
		//				ca.setRulesElementary(122);
		//		ca.setRandomRules();
		//		ca.setGameOfLife();
		//		ca.setBoard(gliderGun);
		//		ca.setRules("11101010010010101101110010100001");
		//		ca.setRules("10000101101111011101101111111100");
		//		ca.setRules("10110110011010010010001101111110");
		//		ca.setRules("11000001100000101000000111010000");
		//		ca.setRules("11001100111011011100110100010100");
		//		ca.setRules("3311312132013101133130210202210333022022232322021320312233112313300020312011210313332113031022002130003300321102000213122032302203220331203001201203130003031130000130211310202103202003123023013021130123012003302011013322203102312212023230320301002023031101113233203112300320312311301032221023110213010323021110311213302321232301332213202221113313130320013322020013012310122320210110100313230232221122003123120101102213130333102122111303230002232000023120112100022302232320210122023232323221310033033301121103003213123000332332222031133013320300110130322233031110120013003232311120001213222310132112223303003312103020130201330131210012323013112320200201321203333101112330220211320332023223231222301333323232301311131013100223032300321233023020321010121132022210012110022101233012013132103321020323313131220100131201332023123211312303101131231103300201300203200322331201331123210210321202002131302013202102330011131121221013020333303312121013100221120002223131232213113233013213020023011201023202122120203131031332230032000030");
		//	ca.setRules("3301310230201210320320030212211110300222323310320123202021210123032110231103220011102311123113331232020102023321002103010221300120112303303022333030133102102301331103121203232202131100330332221301201321203113021201321211123220330222303103023010022311111002033130133213112310210200122200131202211212333121101301311112333033302230031203133231230232211102303221330020203313000321312022221210232110103221331120331200302121123231021222033212013210330123100011231122031133210331102323023333122232202230010022102233120130133112230302131103001301332022132221103310133230201131100102203002210230100023220121312000322320220000032213022110322122223031212113130230200322123122213110223100003303223231030303000002003222213023303303310210100103010002103133022103101000313031130000111032131000013113333310022233031232331012101313101133332313112320100321011021303123100033122020302221122001000222321302203332100110331130230303333133001303212032022001321123320211123202203311313022032311100122312233000322201320012221020003010003232202333133");
		ca.setRules("01101101111000011111001101010101");
		ca.start(numberOfRuns);
		int m = 0;
		for (int k = 5; k < numberOfRuns; k++) {
			ca.start(1);
			int f = 0;
			for (int i = 0; i < creeperEasy.length; i++) {
				for (int j = 0; j < creeperEasy.length; j++) {
					if(ca.getBoard()[i][j]==creeperEasy[i][j]/**/){
						f ++;
					}
				}

			}
			if(f>m){
				m=f;
				System.out.println("New best  fitness at: " + k);
			}
			System.out.println(k + ":" + f);
		}




	}


}
