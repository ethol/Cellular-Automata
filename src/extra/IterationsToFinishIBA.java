package extra;

import java.io.BufferedReader;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;
import java.util.ArrayList;

import CA.CAIBA;

public class IterationsToFinishIBA {
	final static String solution =
//			"1 1 1 1 1 1 1 1 1 1 1 1 0 0 0 0 0 0 0 0 0 0 0 0 2 2 2 2 2 2 2 2 2 2 2 2 "
			"1 1 1 1 1 1 1 1 1 1 1 1 2 2 2 2 2 2 2 2 2 2 2 2 3 3 3 3 3 3 3 3 3 3 3 3 "
			;

	final static byte[][][] test = new byte[][][]{
		{{1,4,1,},{3,0,1,},{1,1,4,},{13,1,2,},{5,0,1,},{11,3,1,},{3,2,1,},{9,3,2,},{15,4,4,},{2,1,3,},   },
		{{0,0,2,},{12,1,4,},{2,2,1,},{0,0,4,},{1,0,2,},{10,0,1,},{6,0,2,},{8,1,1,},{6,4,0,},{2,4,1,},    },
		{{6,4,2,},{10,0,3,},{8,3,0,},{5,3,4,},{15,2,2,},{1,1,4,},{7,0,1,},{6,3,1,},{14,0,0,},{8,1,4,},   },
		{{9,2,1,},{6,3,0,},{6,4,1,},{12,1,0,},{5,0,2,},{13,4,0,},{8,1,1,},{3,1,0,},{0,1,4,},{1,1,3,},    },
		{{1,4,1,},{9,0,4,},{5,3,1,},{2,2,4,},{14,1,4,},{8,2,4,},{12,0,4,},{8,0,4,},{6,1,2,},{5,1,0,},    },
		{{5,4,1,},{9,1,0,},{5,3,3,},{3,2,0,},{6,4,2,},{8,2,3,},{0,4,4,},{2,4,2,},{13,1,3,},{4,4,2,},     },
		{{6,3,4,},{1,4,1,},{1,0,2,},{6,3,0,},{12,4,0,},{13,4,3,},{2,4,3,},{9,1,1,},{5,1,4,},{10,2,0,},   },
		{{5,4,1,},{8,0,2,},{7,3,0,},{5,1,4,},{9,1,3,},{4,3,3,},{5,3,4,},{5,4,0,},{5,2,3,},{2,1,3,},      },
		{{10,3,2,},{6,1,4,},{9,3,0,},{1,0,2,},{6,0,3,},{5,1,0,},{4,0,1,},{8,0,4,},{9,1,1,},{4,2,2,},     },
		{{12,0,4,},{9,3,2,},{8,1,3,},{1,4,0,},{10,2,3,},{3,3,2,},{5,3,4,},{14,0,0,},{9,3,0,},{2,1,3,},   },
		{{1,1,2,},{0,2,0,},{8,0,0,},{10,2,0,},{1,4,2,},{12,1,0,},{0,0,4,},{8,0,3,},{8,2,4,},{11,4,4,},   },
		{{12,1,3,},{5,0,4,},{5,3,0,},{2,3,1,},{6,0,0,},{14,2,2,},{6,4,1,},{8,4,3,},{8,1,4,},{5,1,4,},    },
		{{5,2,0,},{6,0,1,},{8,2,4,},{9,0,0,},{1,2,3,},{11,0,2,},{5,2,3,},{6,1,0,},{15,0,4,},{2,1,2,},    },
		{{1,1,3,},{4,1,1,},{12,3,2,},{0,4,0,},{2,0,2,},{6,0,2,},{13,0,0,},{14,1,0,},{3,1,4,},{1,1,0,},   },
		{{1,0,4,},{5,2,4,},{15,2,1,},{9,0,3,},{3,2,3,},{2,3,1,},{1,2,0,},{14,4,2,},{2,1,2,},{5,2,2,},    },
		{{13,2,3,},{1,0,3,},{3,2,3,},{8,0,2,},{8,1,3,},{2,2,1,},{11,2,2,},{0,0,2,},{1,1,0,},{9,3,0,},    },
		{{6,3,2,},{5,1,4,},{9,0,0,},{8,1,3,},{11,2,4,},{5,1,1,},{2,3,1,},{6,1,3,},{1,1,2,},{5,4,3,},     },
		{{0,3,1,},{5,4,2,},{9,2,1,},{9,3,1,},{0,0,4,},{8,1,4,},{2,3,4,},{12,2,4,},{9,3,2,},{5,1,3,},     },
		{{0,4,1,},{12,2,3,},{5,1,4,},{6,4,2,},{15,3,3,},{8,1,1,},{5,1,4,},{10,0,2,},{2,1,4,},{7,0,2,},   },
		{{5,4,1,},{5,2,4,},{6,2,0,},{0,1,4,},{2,0,2,},{1,0,4,},{11,3,2,},{9,1,2,},{0,4,1,},{1,3,2,},     },
		{{9,4,3,},{2,1,4,},{15,0,4,},{4,2,1,},{0,4,2,},{1,3,4,},{4,1,3,},{2,1,3,},{4,2,1,},{2,0,4,},     },
		{{5,4,1,},{1,4,3,},{3,0,1,},{1,0,1,},{15,3,3,},{8,4,4,},{12,2,0,},{6,4,2,},{0,4,2,},{13,0,2,},   },
		{{9,2,2,},{5,3,4,},{2,2,3,},{2,4,0,},{1,2,4,},{5,1,2,},{6,3,1,},{12,2,4,},{3,3,3,},{6,1,3,},     },
		{{5,3,1,},{8,0,3,},{0,0,2,},{14,2,4,},{1,1,0,},{4,4,3,},{5,1,3,},{5,0,3,},{15,2,4,},{8,1,3,},    },
		{{9,2,0,},{0,1,2,},{11,3,1,},{6,1,4,},{1,1,2,},{2,3,2,},{14,3,1,},{5,1,4,},{0,2,3,},{8,1,1,},    },
		{{15,4,0,},{2,2,0,},{1,4,3,},{5,1,4,},{11,2,0,},{8,2,1,},{6,0,1,},{0,1,0,},{3,1,4,},{6,1,2,},    },
		{{0,4,3,},{3,2,0,},{3,4,1,},{6,2,4,},{1,4,2,},{9,1,0,},{0,4,0,},{1,1,4,},{7,3,4,},{10,2,0,},     },
		{{6,2,4,},{4,4,3,},{5,4,3,},{0,2,4,},{6,2,1,},{13,4,2,},{9,1,4,},{4,4,0,},{9,2,0,},{6,1,2,},     },
		{{9,2,3,},{0,3,1,},{14,0,2,},{13,2,0,},{0,0,2,},{10,3,4,},{13,3,2,},{3,0,3,},{8,1,2,},{0,1,0,},  },
		{{1,4,3,},{1,4,1,},{12,2,1,},{6,1,2,},{8,0,4,},{2,1,2,},{0,0,4,},{2,1,4,},{0,1,4,},{8,1,2,},     },
		{{6,4,3,},{1,1,0,},{8,1,1,},{8,4,3,},{0,4,2,},{1,4,1,},{3,1,3,},{13,3,2,},{15,0,1,},{2,3,3,},    },
		{{5,3,1,},{4,3,0,},{10,0,3,},{7,4,3,},{4,4,3,},{12,1,3,},{1,1,4,},{5,1,3,},{2,1,2,},{8,1,3,},    },
		{{1,3,2,},{8,3,3,},{6,0,3,},{11,3,1,},{5,4,2,},{9,1,4,},{15,0,3,},{0,3,1,},{2,3,4,},{10,3,1,},   },
		{{1,4,1,},{11,3,2,},{3,4,0,},{6,1,4,},{8,4,0,},{2,1,4,},{4,4,4,},{6,4,2,},{4,0,4,},{7,3,0,},     },
		{{2,0,2,},{4,0,4,},{0,4,0,},{1,4,2,},{4,0,2,},{5,3,1,},{8,3,0,},{2,4,2,},{14,3,2,},{5,1,3,},     },
		{{5,1,4,},{3,1,3,},{13,0,4,},{11,4,3,},{5,3,0,},{4,1,4,},{9,0,0,},{2,3,0,},{2,0,3,},{10,1,3,},   },
		{{2,4,3,},{0,0,1,},{10,0,2,},{2,2,0,},{5,2,1,},{5,1,3,},{1,2,1,},{9,2,4,},{5,4,2,},{13,2,4,},    },
		{{3,0,1,},{6,3,4,},{1,4,1,},{1,0,4,},{8,4,4,},{12,3,3,},{6,4,2,},{0,4,2,},{2,2,4,},{13,2,1,},    },
		{{9,3,2,},{8,2,1,},{0,1,3,},{8,2,1,},{2,3,4,},{9,1,1,},{2,1,4,},{6,1,0,},{5,1,2,},{7,4,3,},      },
		{{2,3,3,},{14,2,0,},{2,1,0,},{12,0,3,},{8,0,3,},{1,1,3,},{1,4,0,},{0,1,4,},{3,1,1,},{4,1,0,},    },
		{{1,3,0,},{8,2,3,},{1,1,3,},{1,1,4,},{4,1,4,},{3,4,0,},{6,4,3,},{5,1,2,},{0,2,1,},{1,1,4,},      },
		{{4,1,3,},{5,1,2,},{4,4,3,},{5,3,1,},{2,2,3,},{1,2,4,},{0,1,4,},{9,2,4,},{4,0,4,},{12,2,1,},     },
		{{6,4,0,},{0,1,2,},{0,1,3,},{10,2,4,},{8,4,2,},{6,2,1,},{2,2,4,},{12,2,2,},{0,4,0,},{0,3,4,},    },




	};

	public static void main(String[] args) {
		ArrayList<Integer> firstS = new ArrayList<Integer>();
		/*	for (int i = 0; i < test.length; i++) {
			for (int j = 0; j < test[i].length; j++) {
				System.out.print("{");
				for (int j2 = 0; j2 < test[i][j].length; j2++) {
					System.out.print(test[i][j][j2] + ",");
				}
				System.out.print("}");
			}
			System.out.println();
		}*/
		for (int i = 0; i < test.length; i++) {



			/*  Initialize variables */ 
			int dimentions = 2; 
			int boardSize = 6;
			int numOfStates = 4;
			int numberOfRuns = 80;
			int numberofInstructions = 10;
			boolean randomStart = false;
			boolean vonNeumannNeighbourhood = true;

			CAIBA ca = new CAIBA(dimentions, boardSize, numOfStates, randomStart, numberofInstructions);
			ca.useWriter();
			ca.setRules(test[i]);
			ca.start(numberOfRuns);

			try(BufferedReader br = new BufferedReader(new FileReader("src\\CA\\output\\test2.txt"))) {
				String line = br.readLine();
				int iteration = 0;
				//System.out.println(line);
				line = br.readLine();
				while (line != null) {
					if(line.equals(solution)){
						firstS.add(iteration);
						break;
					}
					iteration++;
					line = br.readLine();
				}
			} catch (IOException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();

			}

		}
		double sum = 0;
		System.out.println(firstS);
		System.out.println(firstS.size());
		for (int i = 0; i < firstS.size(); i++) {
			sum += firstS.get(i);	
		}
		System.out.println("Average: " + sum/firstS.size());

		System.out.println("StDev: " + stDev(firstS));
	}

	private static double stDev(ArrayList<Integer> set){
		double sum=0, sumMeanSquared = 0;
		double avarage;

		for (Integer integer : set) {
			sum+=integer;
		}
		avarage = sum/set.size();
		for (Integer integer : set) {
			sumMeanSquared += Math.pow((integer.doubleValue()-avarage),2);
			//System.out.println(Math.pow((integer.doubleValue()-avarage),2));
		}
		//System.out.println(sumMeanSquared);

		return Math.sqrt(sumMeanSquared/set.size());
	}

}
